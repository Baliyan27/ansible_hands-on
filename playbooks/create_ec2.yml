---
- name: Launch EC2 Instance
  hosts: localhost
  connection: local
  gather_facts: False
  vars:
    aws_region: "ap-south-1"
    key_name: "ansible-key"  # Replace with your key pair name
    instance_type: "t2.micro"
    image_id: "ami-076c6dbba59aa92e6"  # Replace with a valid AMI ID
    security_group: "sg-0d9bbef000436d96f"  # Change as per your security group
    subnet_id: "subnet-0fc35b9d24e832522"  # Replace with your subnet ID
    key_file: "~/ansible-key.pem"  # Local path to store the private key

  tasks:
    - name: Create a new key pair
      amazon.aws.ec2_key:
        name: "{{ key_name }}"
        region: "{{ aws_region }}"
      register: key_pair_result

    - name: Save private key locally
      copy:
        content: "{{ key_pair_result.key.private_key }}"
        dest: "{{ key_file }}"
        mode: '0600'
      when: key_pair_result.changed  # Only save if a new key was created

    - name: Create EC2 instance
      amazon.aws.ec2_instance:
        name: "Ansible-EC2"
        region: "{{ aws_region }}"
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ image_id }}"
        security_group: "{{ security_group }}"
        subnet_id: "{{ subnet_id }}"
        wait: yes
        count: 1
        tags:
          Name: "Ansible-Created"
      register: ec2

    - name: Display instance information
      debug:
        msg: "EC2 Instance Public IP: {{ ec2.instances[0].public_ip_address }}"

    - name: Add instance to inventory
      add_host:
        name: "{{ ec2.instances[0].public_ip_address }}"
        ansible_user: "ec2-user"  # Use 'ec2-user' for Amazon Linux
        ansible_ssh_private_key_file: "{{ key_file }}"
        groups: web_servers
